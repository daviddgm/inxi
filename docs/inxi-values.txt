================================================================================
INXI VALUES
================================================================================
FILE:    inxi-values.txt
VERSION: 4.5
DATE:    2021-02-27

----------------------------------------
Docs:
See: docs/inxi-data.txt
See: docs/inxi-resources.txt
See: docs/inxi-tools.txt
See: docs/optimization.txt
See: docs/perl-programming.txt

----------------------------------------
Comments:

The main values used by inxi internally, this is a reference so you don't
always have to look it up in the code.

NOTE: THIS IS ALMOST ALWAYS OUT OF DATE!!

================================================================================

Sections:
1. CONFIG VALUES
2. ADVANCED ACTION SWITCHES
3. DEBUGGING SWITCHES
4. HASHED/SCALAR/BOOLEAN VALUES
5. DATA ARRAY VALUES

================================================================================
CONFIG VALUES
--------------------------------------------------------------------------------

========================================
USER CONFIG
----------------------------------------

These come from config files:
/etc/inxi.conf 
$HOME/.inxi.conf  
$HOME/.config/inxi.conf  

for pinxi:
/etc/pinxi.conf
$HOME/.pinxi.conf  
$HOME/.config/pinxi.conf 

VALUES:
ALLOW_UPDATE            # values [true|false] # internal:  $b_update = 1
ALLOW_WEATHER           # values [true|false] # internal:  $b_weather = 1
[[ LEGACY:
B_ALLOW_UPDATE          # LEGACY: values [true|false] # internal:  $b_update = 1
B_ALLOW_WEATHER         # LEGACY: values [true|false] # internal:  $b_weather = 1
B_SHOW_HOST             # LEGACY: values [true|false] # internal:  $show{'host'} = 1
]]
# Seems like less than .3 doesnt work as reliably
CPU_SLEEP               # values: [0-decimal] # $cpu_sleep = 0.3; or --sleep
# change to less, or more if you have very slow connection
DL_TIMEOUT              # values: [0-integer] # $dl_timeout = 4
DOWNLOADER              # $dl{'dl'} = curl|fetch|ftp|perl|wget
LANGUAGE                # language type, once active: [de|es|no]
LIMIT                   # overrides $limit for IP output. -1 is no limit. --limit [number]
FILTER_STRING           # $filter_string = '<filter>'
OUTPUT_TYPE             # $output_type = [json|screen|xml]
NO_DIG                  # values [true|false]
NO_HTML_WAN             # disable use of HTML WAN IP downloaders. Either use dig only, or no wan.
PS_COUNT                # $ps_count = 5
SENSORS_CPU_NO          # $sensors_cpu_nu = 0 # see get_sensors_data
SENSORS_EXCLUDE         # remove these main, not disk or gpu, (comma separated) sensors from sensors 
SENSORS_USE             # use only these main, not disk or gpu, (comma separated) sensors 
SHOW_HOST               # values [true|false] # internal:  $show{'host'} = 1
USB_SYS                 # values [true|false]
WAN_IP_URL              # alternate url to get WAN IP data from, don't use dig. 
                        # The IP address from the URL must be the last item on the last (non\-empty) line of 
                        # the URL's page content source code.
WEATHER_SOURCE          # value [0-9]
WEATHER_UNIT            # value [m|i|mi|im]

### layout
CONSOLE_COLOR_SCHEME    # $colors{'console'} = 0
GLOBAL_COLOR_SCHEME     # $colors{'global'} = 0
IRC_COLOR_SCHEME        # $colors{'irc-gui'} = 0
IRC_CONS_COLOR_SCHEME   # $colors{'console-irc'} = 0
IRC_X_TERM_COLOR_SCHEME # $colors{'irc-virt-term'} = 0
VIRT_TERM_COLOR_SCHEME  # $colors{'virt-term'} = 0
# NOTE: the old SEP1 was for short, but no longer using short/long variants
# These are NOT used, they were maybe going to be used, but I decided against it.
SEP1_IRC=':'            # $sep{'s1-irc'} = ':'
SEP1_CONSOLE=':'        # $sep{'s1-console'} = ':'
# these will assign a separator to non irc states. Important! Using ':' can trigger stupid emoticon
# behaviors in output on IRC, so do not use those.
# NOTE: the old SEP3 map to SEP2 now
SEP2_IRC=''             # $sep{'s2-irc'} = ''  
SEP2_CONSOLE=':'        # $sep{'s2-console'} = ':

### widths
# for features like help/version will fit to terminal / console screen width.
# Console # widths will be dynamically set in main() based on cols in 
# term/console
COLS_MAX_CONSOLE        # $size{'console'} = 115
COLS_MAX_IRC            # $size{'irc'} = 130
# note, this is console out of x/display server, will also be set dynamically
# not used currently, but maybe in future
COLS_MAX_NO_DISPLAY     # $size{'no-display'} = 130
# note: < 11 forces wrap of line starter, so in practical terms, any value < 11 
# forces indent to default 2 value. So to force start key wraps, simply assign 
# a value < 11.
INDENT                  # $size{'indent'} = 11 
# auto wrap trip point of line starter. Values < 90 not recommended.
INDENT_MIN              # $size{'indent-min'} = 90 

## LEGACY: I doubt many if any people ever used these. SEP3 now maps to new SEP2 
## and SEP1 if anyone ever used them will map to SEP1
##SEP1='~'              # $sep{'s1'} = '~'
## SEP2=' '             # $sep{'s2'} = ' '
# these will assign a separator to non irc states. Important! Using ':' 
# can trigger stupid emoticon behaviors in output on IRC, so do not use those.
SEP3_IRC=''             # $sep{'irc'} = ''
SEP3_CONSOLE=':'        # $sep{'console'} = ':

================================================================================
ADVANCED ACTION SWITCHES
--------------------------------------------------------------------------------

Advanced options to trigger certain behaviors.

----------------------------------------
--alt [40-44]
----------------------------------------

40: don't use perl/tiny as downloader

41: don't use curl as a downloader option

42: don't use fetch as a downloader option

43: don't use wget as a downloader option

44: don't use curl, fetch, or wget as downloader options

----------------------------------------
--dmidecode
----------------------------------------

Set $b_dmidecode_force = 1

----------------------------------------
--host
----------------------------------------

Set $show{'host'} = 1

----------------------------------------
--no-host
----------------------------------------

Set no check ssl options for downloaders 

----------------------------------------
--no-ssl
----------------------------------------

Set $show{'host'} = 0

================================================================================
DEBUGGING SWITCHES
--------------------------------------------------------------------------------

========================================
DEBUG PRIMARY
----------------------------------------

These are all for user fired --debug debugger data generators.

----------------------------------------
--debug [0-9]+
----------------------------------------

$debug = [1-3|10-12|20-22]

set_debugger() sets the various actions.

1-3   - basic debugging 
10-12 - log debugging. 10 - log; 11 - full, with file data; 
        12 - full+colors [not used}
20-22 - full debugger data collector debugging, with /sys parsing

20 runs data debugger, 21-22 upload data

----------------------------------------
--ftp 
----------------------------------------

Alternate upload server for --debug 21 

Must be in this format: ftp.yoursite.com/incoming - the /incoming directory
is required.

----------------------------------------
INTERNAL: $debugger{'gz'}
----------------------------------------

Set in set_debugger()  

$debugger{'gz'} = 1

Removes gz debugger file if 1. (--debug 22/24)

----------------------------------------
INTERNAL: $debugger{'timers'}
----------------------------------------

Set in set_debugger()

$debugger{'timers'}

Prints out execution times for debug levels between 3 and 9

----------------------------------------
--debug-no-eps
----------------------------------------

$debugger{'no-exit'} = 1
$debugger{'no-proc'} = 1
$debugger{'sys'} = 0

Shortcut, triggers no /proc, no /sys, and no exit on error

----------------------------------------
--debug-no-exit
----------------------------------------

$debugger{'no-exit'} = 1

Skips exit on error, prints error messages, but does not exit

----------------------------------------
--debug-no-proc
----------------------------------------

$debugger{'no-proc'} = 1

Skips /proc debugger
 
----------------------------------------
--debug-no-sys
----------------------------------------

$debugger{'sys'} = 0

Disables /sys parsing if debugger hangs on it

----------------------------------------
--debug-proc 
----------------------------------------

$debugger{'proc'} = 1

Forces parsing of /proc directory when run as root.
  
Root does not process /proc files unless this flag is switched

----------------------------------------
--debug-proc-print
----------------------------------------

$debugger{'proc-print'} = 1

prints proc file name before copying it

----------------------------------------
--debug-sys
----------------------------------------

$debugger{'sys'} = 1
$debugger{'sys-force'} = 1

mainly for PowerPC which crashes on root /sys parsing

----------------------------------------
--debug-sys-print
----------------------------------------

$debugger{'sys-print'} = 1

For debugging /sys hangs, will show the file it hangs on.

----------------------------------------
--debug-test-1
----------------------------------------

$debugger{'test-1'} = 1

Trips sub user_debug_test_1

----------------------------------------
--debug-width
----------------------------------------

$debugger{'width'}
Set width from 80 to whatever for debugger inxi output.

----------------------------------------
--debug-z/--debug-filter
----------------------------------------

$debugger{'filter'} = 1

Adds -z flag to debugger run self option list.

========================================
DEBUGGER OUTPUT SWITCHES
----------------------------------------

Used to trigger various internal print debuggers for dev work

----------------------------------------
--dbg [0-9]+
----------------------------------------
These are activated by: --dbg [1-xx] 
Values will change, and this should be the primary reference to use them:
Sets: @test indexes to 1, true, or sets various flags for testing in the system.

1. show downloader command string for download actions, download errors, etc

2. Dumper dmidecode working data array 

3. Dumper ifconfig/ip addr arrays, and @ifs_bsd for ifconfig

4. Dumper lscpi/pciconf data array 

5. Dumper ps aux array

6. Dumper lsusb short/long arrays

7. Dumper sysctl array

8. Dumper %cpu array, data_cpuinfo, data_sysctl

9. Dumper @devices_[audio|graphics|hwraid|network|timer]

10. print shell data in initial shell detection

11. Dumper dmesg.boot array

12. Dumper smartctl data

13. Dumper disk @data array

14. Show Xorg.x.log file used

15. Dumper swaps data array

16. Dumper partitions data array

17. Dumper $graphics{'screens'} data array

18. Dumper sensors raw array

19. Dumper smartctl_data @data

20. Dumper set_build_prop build.prop values hash [android only]

21. Dumper hdd_temp_sys %sensors values

22. Dumper lvm/logical raw data values 

23. Dumper lvm/logical processed data values

24. Dumper disk data

========================================
EMULATTION SWITCHES (MISC)
----------------------------------------

----------------------------------------
--irc
----------------------------------------

Set $b_irc = 1

========================================
FAKE OS SWITCHES
----------------------------------------

Used in conjuction with other switches to emulate as far as
possible the os type.

----------------------------------------
--arm
----------------------------------------
Set $b_arm = 1

----------------------------------------
--bsd [darwin|dragonfly|freebsd|openbsd|netbsd]
----------------------------------------
Force $bsd_type

Values: darwin|dragonfly|freebsd|openbsd|netbsd

Sets: $fake{'bsd'} = 1

See --fake for specific fake bsd tools

----------------------------------------
--mips
----------------------------------------
Set $b_mips = 1

----------------------------------------
--ppc
----------------------------------------
Set $b_ppc = 1

========================================
FAKE DATA SWITCHES
----------------------------------------

NOTE ON --fake [type]: these are useful to avoid uploading active
file reading debuggers for features, which is easy to do. These 
will skip the live data grabbers, and run the debugger file loader
instead. Obviously that will fail for non dev users without those
paths existing on their systems, but that doesn't matter since it
would only be visible to users who ran the --fake options, and those
are not listed in either -h or man page to avoid confusing users.

loads boolean trigger in corresponding %fake hash key

See also: --bsd and FAKE OS SWITCHES

----------------------------------------
Fake bsd data
----------------------------------------

These fake data changes are tripped by --bsd <type>, which sets the 
$fake{'bsd'} flag = 1.

These will trip the appropriate internal flags to make the data 
source be the dev data file, not the host system actual data.

----------------------------------------
--fake dboot

Sets system file dmesg.boot
----------------------------------------
--fake pciconf

Sets alerts pciconf use
----------------------------------------
--fake sysctl

Sets alerts sysctl use
----------------------------------------
--fake usbconfig

Sets alerts usbconfig use; changs lsusb to 'missing'
----------------------------------------
--fake usbdevs

Sets alerts usbdevs use; changs lsusb to 'missing'

----------------------------------------
Fake standard data
----------------------------------------

These are linux or linux and bsd, depending.

----------------------------------------
--fake bluetooth

Use fake bluetooth data, varies, eg, fake hciconfig.txt files, etc.

----------------------------------------
--fake compiler

Use fake kernel compiler data (linux)

----------------------------------------
--fake cpu

Use fake cpu data, varies, eg, fake cpuinfo.txt files, etc.

----------------------------------------
--fake dmidecode

sets no root testing for file based dmidecode debugger data.

----------------------------------------
--fake logical

Use debugger data file based lvm, luks, bcache, and any other logical
type volume data

----------------------------------------
--fake raid

Use debugger data files instead of /proc/mdstat and 
zfs debugger data, and any other raid types.

Note: to actually trigger, use RaidData global debug
switches, which work together with $fake{'raid'} to activate
the relevant item.

----------------------------------------
--fake sensors

Use debugger data file based lm-sensors sensors output file

================================================================================
HASHED/SCALAR/BOOLEAN VALUES
--------------------------------------------------------------------------------

These hashes/booleans contain data that will be used for tests and data 
collection.

========================================
ALERTS / WARNINGS
----------------------------------------
my (%alerts,%hash);

%hash = (
'dmidecode' => {
'action' => 'use', # use: true, else missing|permissions|smbios error
'missing' => 'Required program dmidecode not available.',
'permissions' => 'Required program dmidecode not available.',
'smbios' => 'No SMBIOS data for dmidecode to process.',
},
);
%alerts = (%alerts, %hash);
%hash = (
[xrandr xdpyinfo glxinfo] => {
'action' => $action,
'missing' => "Missing: $_ - continuing in non desktop mode. Check --recommends",
'in-console' => 'See --display option to get graphics data',
},
);
%alerts = (%alerts, %hash);

[pciconf sysctl] => {
'action' => $action,
'missing' => "Missing system tool: $_. Output will be incomplete",
'permissions' => "Unable to run $_. Root required?",
},
);
%alerts = (%alerts, %hash);

%hash = (
[lspci] => {
'action' => $action,
'missing' => "Missing system tool: $_. Output will be incomplete",
'permissions' => "Unable to run $_. Root required?",
},
);
%alerts = (%alerts, %hash);

========================================
CLIENT
----------------------------------------

%client = (
'console'     => [01],
'console-irc' => [01],
'dcop'        => [01],
'dobject'     => [default|konversation]
'dport'       => '',
'dserver'     => '',
'dtarget'     => '',
'konvi'       => [0123], # level of konvi for internal use. 2 is /cmd start
'name'        => [lower case client name]
'name-print'  => [Display version of name]
'native'      => [01], # konvi: /cmd = 0; /pinxi = 1
'qdbus'       => [01],
'version'     => [client version],
);

========================================
DOWNLOADER
----------------------------------------

See also --no-ssl

%dl = (
# switches to use specific downloader
'curl'       => [01],
'fetch'      => [01],
'ftp'        => [01],
'perl'       => [01],
'wget'       => [01],

# options
'dl'         => [|curl|fetch|ftp|perl|wget] null means no downloader found or used.
'file'       => [arguments for downloader type for file download]
'no-ssl'     => [argument for no ssl checks: set by downloader type]
'no-ssl-opt' => [assigns no-ssl: set by --alt 34]
'null'       => [ftp only: sets send output to /dev/null if required]
'spider'     => [wget/tiny only: spider the file to test if it's there]
'stdout'     => [arguments for downloader type for stdout output]
'timeout'    => [the time out option (eg: -T), paired with $dl_timeout]
'ua'         => [fake user agent string to send site]
)

========================================
FILE ASSIGNMENT/TESTS
----------------------------------------

Used to pack: %system_files

The tests will return EITHER the file path OR an empty string.

Thus, the use will be like this. I was actually surprised to find this works
in perl, but tests show it does. This will return either false, '', or the
file path. Since the path is there, it shows as true, and also the variable
has been packed for use in the following.

NOTE: need to confirm this is solid in 5.08

if ( my $mount = system_files{'mount'} ){
	do stuff.
}

%files = (
'asound-cards'   => '/proc/asound/cards',
'asound-modules' => '/proc/asound/modules',
'asound-version' => '/proc/asound/version',
'cpuinfo'        => '/proc/cpuinfo',
'dmesg-boot'     => '/var/run/dmesg.boot',
'lsb-release'    => '/etc/lsb-release',
'mdstat'         => '/proc/mdstat',
'meminfo'        => '/proc/meminfo',
'modules'        => '/proc/modules',
'mounts'         => '/proc/mounts',
'os-release'     => '/etc/os-release',
'partitions'     => '/proc/partitions',
'scsi'           => '/proc/scsi/scsi',
'xorg-log'       => '/var/log/Xorg.0.log' # or xset path
);

========================================
OUTPUT HASHES
----------------------------------------

These hashes contain the settings for colors, separators, and sizes

----------------------------------------
COLORS: %colors
----------------------------------------

%colors = (
'c1'            => [irc/console color]
'c2'            => [irc/console color]
'console'       => [0-42]
'cn'            => [reset normal irc/console color]
'default'       => 2 - set in set_basics()
'global'        => [0-12]
'irc-console'   => [0-12]
'irc-gui'       => [0-12]
'irc-virt-term' => [0-12]
'scheme'        => [0-42]
# corresponds to: 94: console 95: virt-term 96: irc-gui 
# 97: irc-virt-term 98: irc-console 99: global 
'selector'      => [94-99]
'virt-term'     => [0-42]
);

----------------------------------------
SEPARATOR: %sep 
----------------------------------------

$sep{'s1'}='~';        # dynamic from irc/console: primary category separator, like: Info:
$sep{'s2'}=' ';        # dynamic from irc/console: secondary separator, like: Card-1:
$sep{'s1-irc'}='';     # long form irc
$sep{'s1-console'}=':' # long form console
$sep{'s2-irc'}='';     # long form irc
$sep{'s2-console'}=':' # long form console

----------------------------------------
SIZE: %size
----------------------------------------

$size{'console'} 
$size{'indent'} = 10;
# to change default of < indent-cols triggering start line wrap and 2 indent
$size{'indent-min'}=90; 
$size{'irc'}
$size{'max'}=0;
$size{'no-display'}

# these will be set dynamically in set_display_width()
$size{'term'}=80;
$size{'term-lines'}=100;
      
========================================
OUTPUT SCALARS
----------------------------------------

$cpu_sleep = 0.3 # time cpu sleeps before inxi gets the speed, inxi itself
spikes the cpu when it runs so it's good to let it spin down a bit before 
losting the speed. CPU_SLEEP config item or --sleep overrides it.

$limit = 10 # for large IP output, allows users to set the limit, either in
 config file LIMIT= or with --limit switch. -1 means no limit
 
========================================
SHOW - PRINT LINE SWITCHES
----------------------------------------

%show

This is a global that assigns print row boolean values.

These are set in the get_options function.

%show = (
'audio'            # -A/--audio
'battery'          # -b/-F battery only if present
'battery-forced    # -B/--battery
'bluetooth'        # -E/--bluetooth
'cpu'              # -C/--cpu - cpu overrides cpu-basic
'cpu-basic'        # -b/--basic/-v 1 cpu line
'cpu-flag'         # -C/--cpu/-f/--flags and full flags
'disk'             # -D/--disk - disk overrides disk-basic/disk-total
'disk-basic'       # -v 2 Disk data
'disk-total'       # -b/--basic/ -v 1 Disk
'graphic'          # -G/--graphics
'host'             # -S/--system. Default: true. --alt 31/32 disable/enable
'info'             # -I/--info
'ip'               # -i/--internet
'label'            # -l/--label [-P or -p + labels]
'logical'          # -L/--logical
'machine'          # -M/--machine
'network'          # -N/--network
'network-advanced' # -n/--network-advanced/ -v 3
'optical'          # -d/--disk-all/--optical/ -v 6
'optical-basic'    # -F, -v5 - basic optical output
'partition'        # -P/--partition basic
'partition-full'   # -p/--partition-full
'process'          # -t/--processes with c or m
'ps-cpu'           # -t/--processes with c [count]. Sets: $configs{'PS_COUNT'}
'ps-mem'           # -t/--processes with m [count]. Sets: $configs{'PS_COUNT'}
'raid'             # -R/--raid, sets raid, raid-forced'
'raid-basic'       # -b / -F / -v 2 raid, only show if data is there
'raid-forced'      # -R/--raid, show if raid there or not
'ram'              # -m/--memory
'repo'             # -r / --repos
'sensor'           # -s/--sensors
'short'            # inxi short form, no args
'slot'             # --slots
'system'           # -S/--system
'unmounted'        # -o/--unmounted
'usb'              # --usb
'uuid'             # -p/-P/-u/--uuid with UUID
'weather'          # -w / --weather, distro override with $use{'weather'} false
'weather-location' # -W / --weather-location, contains location string or is null
'width'            # -y/--width 80-130
);

$extra   # -x, -xx, -xxx, --extra [0-3]. Repeat or integer arg.
         # Either increments (-xxx) or uses option value (-x 3)
$b_admin # --admin/-a [-a sets -xxx as well]

========================================
USE SWITCHES
----------------------------------------

These trip specific behaviors, mostly around filtering or distro maintainer blocks of features.

%use = (
'filter'           # -z/--filter: all, filters output. $filter_string Auto on in IRC unless disabled by -Z
'filter-label'     # filter partition labels
'filter-override'  # -Z/--filter-override: overrides IRC filter
'filter-uuid'      # filter partition UUIDs
'update'           # allow -U updater, default true, distro maintainers can set in configs to false
'weather'          # allow -w/W weather, default true, distro maintainers can set in configs to false
);

================================================================================
DATA ARRAY VALUES
--------------------------------------------------------------------------------

========================================
DeviceData
----------------------------------------

For -A, -C, -E, -G, -N, -R
@devices_audio
@devices_bluetooth
@devices_graphics
@devices_hwraid
@devices_network
@devices_timer - arm cpu variant

For DeviceData internal use, logging, debugging:
@devices

0 - type
1 - type_id
2 - bus_id
3  -sub_id
4 - device
5 - vendor_id
6  -chip_id
7 - rev
8 - port
9 - driver
10 - modules
11 - driver_nu [bsd, like: em0 - driver em; nu 0. Used to match IF in -n
12 - subsystem/vendor
13  -subsystem vendor_id:chip id
14 - soc handle

========================================
USBData
----------------------------------------

For -A, -E, -G, -J, -N

@usb
 - @usb_audio
 - @usb_bluetooth
 - @usb_graphics
 - @usb_network

0 - bus id / sort id
1 - device id
2 - path_id
3 - path
4 - class id
5 - subclass id
6 - protocol id
7 - vendor:chip id
8 - usb version
9 - interfaces
10 - ports
11 - vendor 
12 - product
13 - device-name
14 - type string
15 - driver
16 - serial
17 - speed
18 - configuration - not used
19 - power in mW [bsd only]



